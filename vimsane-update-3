#!/bin/bash
# vimsane-update-3
#
# Updates a user's configuration to vimsane v3
#
# Prerequisites:  The ~/.vim directory must NOT exist yet.  
#                 (We're going to fetch it from github)
#
# Args:  
#      $1: version currently installed [ '0' if not previously installed ]
#      $2: target version.  Must be >= ThisVersion.

source ${VimsaneCodeRoot}/vs_constants
ThisVersion=3

function errExit { 
   echo  "ERROR: $*" >&2
   exit 1
}

function usingGoodVim {
    if [[ "$(which vim)" != /opt/bb/bin/vim ]]; then
        prompt_flow "WARNING: your environment is resolving 'vim' as $(which vim).  Vimsane expects /opt/bb/bin/vim.  If you invoke that explicitly, you'll be fine, but that's tedious. 

If vim doesn't work right or you get lots of error messages, then you're probably running an old version of vim.

Things you can try to solve this problem, in order of preference:

    1.  Ensure that the line '+ contrib/optbb' is present in your ~/.bbprofile

    2.  Check your system PATH (i.e. 'echo \$PATH') and ensure that 
        /opt/bb/bin is listed *before* $(dirname $(which vim)).

    3. Add an alias in your shell startup file (~/.bashrc, ~/.kshrc, or ~/.profile):

            alias vim='/opt/bb/bin/vim'

Your vimsane installation isn't broken, but if you run an old vim things will probably not work well.

Press ENTER to continue: "
    fi
}

cd ${HOME}
[[ -d $HOME/.vim ]] && errExit ".vim already exists, vimsane-update-3 failed."
[[ -f vimrc ]] && errExit "Unexpected $VIM/vimrc was found.  Please rename this and move it out of ~/.vim"

[[ -f .vimrc ]] && errExit "Unexpected $VIM/.vimrc was found.  Please rename this and move it out of ~/.vim"



vs_github_clone "sanekits/vimsane-cfg" .vim || exit 1

# Vim likes a .vimtmp to save backups, etc:
mkdir -p $HOME/.vimtmp &>/dev/null

cd ~/.vim || errExit "Step3.0x011189"

vs_github_clone "VundleVim/Vundle.vim" || exit 1

templ="template-vimrc-vimsane-1"  # Our initial vimrc for a new user


echo "Creating ~/.vim/vimrc from ${templ}:"
/bin/cp ${VimsaneCodeRoot}/$templ vimrc || errExit "Step3.0x92452"

# We need symlink for plugins:
ln -s load-vimsane-plugins.vim load-plugins.vim


prompt_flow "
========= Plugin Installation =================
We will now launch vim in automatic mode and install plugins from github.  

  o  Watch for password prompts.  If you're prompted for a proxy password, use your Unix password.

  o  Please allow the process to complete, it will exit when done.  If a problem occurs, you can manually re-try at any time by running vim and invoking ':PluginInstall', reviewing errors and researching problems.

Press ENTER to continue:"

# Now we have Vundle installed in ~/.vim/Vundle.vim, and our startup config stuff is ready
# to install the rest of the plugins.  To do that, we invoke vundle's auto-installer.  This
# is a bit tricky, because we need to launch vim, have it invoke PluginInstall, in an environment
# where we're telling git how to deal with the Bloomberg dev proxy. 
# We're jumping through these hoops so that we don't modify the user's ~/.gitconfig proxy setup.  We
# don't want that responsibility:
GIT_SSL_NO_VERIFY=true https_proxy="http://$(whoami)@${github_proxy}" /opt/bb/bin/vim +PluginInstall +qall

if [[ $? != 0 ]]; then 
    prompt_flow 'ERROR installing one or more vim plugins. It probably works, but something is not good here. You should run vim manually and do ":PluginInstall", then sort out any errors that occur.'
fi

# We have a couple of template files to donate to the new user:
/bin/cp ${VimsaneCodeRoot}/_vs_hello.vim ~/.vim/vs_hello.vim
/bin/cp ${VimsaneCodeRoot}/vs-hello-world.cpp ~/.vim/

usingGoodVim

echo "Update to v$ThisVersion is complete."


